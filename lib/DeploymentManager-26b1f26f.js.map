{"version":3,"file":"DeploymentManager-26b1f26f.js","sources":["../src/core/helpers.ts","../src/core/AppManager.ts","../src/core/SSHClient.ts","../src/core/DeploymentManager.ts"],"sourcesContent":["import * as FS from \"fs\";\n\nexport function quote(text: string): string {\n  return JSON.stringify(text);\n}\n\nexport class Exception extends Error {\n  constructor(public readonly code: string, message: string = code) {\n    super(message);\n  }\n}\n\nexport class FileNotFoundException extends Exception {\n  constructor(public readonly fileName: string) {\n    super(\"FileNotFound\", `No such file ${quote(fileName)}`);\n  }\n}\n\nexport type DateString = string;\n\nexport function uuid<T extends string>(): T {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0,\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  }) as T;\n}\n\nexport function areObjectsEqual(a: any, b: any, depth: number = 0): boolean {\n  if (typeof a !== typeof b) return false;\n  const type = typeof a;\n  if (type === \"object\") {\n    if (a === null || b === null) {\n      return a === b;\n    }\n\n    if (depth > 20) throw new Exception(\"PossibleCircularObject\");\n\n    if (Array.isArray(a) || Array.isArray(b)) {\n      if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) return false;\n        return a.every((_, index) => areObjectsEqual(a[index], b[index], depth + 1));\n      }\n      return false;\n    }\n\n    const keys = Object.keys(a);\n    if (keys.length !== Object.keys(b).length) return false;\n    return keys.every((key) => areObjectsEqual(a[key], b[key], depth + 1));\n  }\n\n  return a === b;\n}\n\nexport function getCreatedAt(): DateString {\n  return new Date().toISOString();\n}\n\nexport async function importJSON<T>(configFile: string): Promise<T> {\n  const contents = await FS.promises.readFile(configFile, \"utf-8\");\n  try {\n    return JSON.parse(contents);\n  } catch (error) {\n    throw new Exception(\"InvalidJSONObject\", error.message);\n  }\n}\n","import chalk from \"chalk\";\nimport * as CP from \"child_process\";\nimport * as FS from \"fs\";\nimport * as OS from \"os\";\nimport * as Path from \"path\";\nimport * as Util from \"util\";\nimport { AppInstance } from \"./AppInstance\";\nimport { AppManifest } from \"./AppManifest\";\nimport { DeploymentHistoryItem } from \"./DeploymentHistoryItem\";\nimport { areObjectsEqual, Exception, getCreatedAt, importJSON, quote, uuid } from \"./helpers\";\nimport { AppInstanceId, ReleaseId } from \"./Id\";\nimport { Release } from \"./Release\";\nimport { SSHClient } from \"./SSHClient\";\n\nexport class AppManager {\n  constructor(public readonly app: AppManifest, private readonly manifest: string, private readonly sh: SSHClient) {}\n\n  private readonly appDir = Path.dirname(this.manifest);\n\n  private async saveManifest(): Promise<void> {\n    await this.sh.write(this.manifest, JSON.stringify(this.app, null, 2));\n  }\n\n  private async withManifestSync<T>(fn: () => Promise<T>): Promise<T> {\n    const app = JSON.parse(JSON.stringify(this.app));\n\n    try {\n      const result = await fn();\n      await this.saveManifest();\n      return result;\n    } catch (error) {\n      if (!areObjectsEqual(app, this.app)) {\n        FS.promises.writeFile(\n          \"deploy-debug.log\",\n          [\n            `===== Current Manifest ====`,\n            JSON.stringify(app, null, 2),\n            `===== Unsaved Manifest ====`,\n            JSON.stringify(this.app, null, 2),\n          ].join(\"\\n\") + \"\\n\",\n        );\n        console.warn(chalk.yellow(chalk.bold(\"CommandFailure: \", \"reverting app manifest to previous state.\")));\n      }\n\n      throw error;\n    }\n  }\n\n  // -- Release Management\n  async createCertificates(): Promise<void> {\n    const cmd = (await this.instances()).length > 0 ? \"run --installer nginx\" : \"certonly\";\n    const args = `-n --agree-tos --dns-digitalocean --dns-digitalocean-credentials /root/.secrets/certbot/digitalocean.ini`;\n    const certFile = (domain: string) => `/etc/letsencrypt/live/${domain}/fullchain.pem`;\n    const certbot = (domain: string, wildCard = true) =>\n      `test -f ${quote(certFile(domain))} || certbot ${cmd} ${args} -m ${quote(this.app.domain.email)} -d ${quote(\n        domain,\n      )} ${wildCard ? `-d ${quote(`*.${domain}`)}` : \"\"};`;\n\n    await this.sh.exec(\n      [certbot(this.app.domain.primary), this.app.domain.aliases.map((alias) => certbot(alias))].join(\"\\n\"),\n    );\n  }\n\n  async createRelease(options: Pick<Release, \"commit\" | \"tag\">, asset: string): Promise<Release> {\n    if (!Path.isAbsolute(asset)) asset = Path.resolve(process.cwd(), asset);\n    const stat = await FS.promises.stat(asset);\n    let assetFilename = asset;\n    let shouldUnlinkAssetFile = false;\n    if (stat.isFile()) {\n      const { stderr } = await Util.promisify(CP.exec)(`tar -tzf  ${quote(asset)}`);\n      if (stderr.trim().length > 0) {\n        throw new Exception(\"InvalidArchive\", stderr);\n      }\n    } else if (stat.isDirectory()) {\n      const pkg = await importJSON<{ name: string; version: string }>(Path.resolve(asset, \"package.json\"));\n      assetFilename = Path.resolve(asset, `${pkg.name}-${pkg.version}.tgz`.replace(\"@\", \"\").replace(\"/\", \"-\"));\n      const cmd = `npm pack`;\n      console.log(chalk.gray(chalk.bold(\"Execute (localhost): \"), cmd));\n      const { stderr } = await Util.promisify(CP.exec)(cmd, {\n        env: { ...process.env, COPYFILE_DISABLE: \"true\" },\n        cwd: asset,\n      });\n\n      if (stderr.trim().length > 0) {\n        throw new Exception(\"InvalidArchive\", stderr);\n      }\n    }\n\n    const release: Release = {\n      id: (this.app.releases.length > 0 ? this.app.releases[0].id + 1 : 1) as ReleaseId,\n      commit: options.commit,\n      tag: options.tag,\n      createdAt: getCreatedAt(),\n    };\n\n    return this.withManifestSync(async () => {\n      await this.sh.upload(assetFilename, Path.join(this.appDir, \"releases\", `v${release.id}.tar.gz`));\n      if (shouldUnlinkAssetFile) await FS.promises.unlink(assetFilename);\n\n      this.log(\n        `Create release v${release.id} from ${this.app.repository}/commit/${release.commit} (version: ${release.tag})`,\n      );\n      this.app.releases.unshift(release);\n\n      return release;\n    });\n  }\n\n  private log(line: string): void {\n    this.app.changelog.push({\n      info: `${OS.userInfo().username}@${OS.hostname()}`,\n      message: line,\n      timestamp: getCreatedAt(),\n    });\n  }\n\n  async setEnv(key: string, value: string): Promise<void> {\n    return this.withManifestSync(async () => {\n      if (!/^[a-z][a-z0-9_]*$/.test(key))\n        throw new Exception(\n          \"InvalidEnvironmentVariableName\",\n          `Invalid characters in environment variable name: ${key}`,\n        );\n      await this.sh.exec(\n        [\n          `sed -i ${quote(`/^${key}=.*$//g`)} ${this.appDir}/.env`,\n          `echo ${quote(`${key}=${quote(value)}\\n`)} >> ${this.appDir}/.env`,\n        ].join(\"\\n\"),\n      );\n\n      if (!this.app.env.includes(key)) {\n        this.app.env.push(key);\n        this.log(`Set environment variables ${quote(key)}`);\n      } else {\n        this.log(`Update environment variables ${quote(key)}`);\n      }\n    });\n  }\n\n  // -- Instance Management\n  async instances(): Promise<AppInstance[]> {\n    return this.app.deployments.current;\n  }\n\n  async getInstance(instanceId: AppInstanceId): Promise<AppInstance | undefined> {\n    return this.app.deployments.current.find((instance) => instance.id === instanceId);\n  }\n\n  async getInstancesByReleaseId(releaseId: ReleaseId): Promise<AppInstance[]> {\n    return this.app.deployments.current.filter((instance) => instance.releaseId === releaseId);\n  }\n\n  async getRelease(releaseId: ReleaseId): Promise<Release | undefined> {\n    return this.app.releases.find((release) => release.id === releaseId);\n  }\n\n  async getReleasesByTag(tag: string): Promise<Release[]> {\n    return this.app.releases.filter((release) => release.tag === tag);\n  }\n\n  async current(): Promise<AppInstance | undefined> {\n    const id = this.app.deployments.active;\n    if (id != null) {\n      return this.app.deployments.current.find((instance) => instance.id === id);\n    }\n  }\n\n  async createInstance(releaseId: ReleaseId): Promise<AppInstance> {\n    const release = this.app.releases.find((release) => release.id);\n    if (release == null) throw new Exception(\"UnknownRelease\", `Cannot find release v${releaseId}`);\n\n    return this.withManifestSync(async () => {\n      const id = uuid<AppInstanceId>();\n      const usedPorts = this.app.deployments.current.map((instance) => instance.internal.port);\n      usedPorts.sort((a, b) => a - b);\n      let port = 3000;\n      for (const usedPort of usedPorts) {\n        if (usedPort > port) break;\n        port++;\n      }\n\n      const directory = `${this.appDir}/instances/${id}`;\n      const logs = `/var/log/${this.app.name}/${id}.log`;\n      const errors = `/var/log/${this.app.name}/${id}-error.log`;\n      const instance: AppInstance = {\n        id: id,\n        releaseId: releaseId,\n        preview: `https://preview-${id}.${this.app.domain.primary}/`,\n        createdAt: getCreatedAt(),\n        internal: {\n          directory,\n          port,\n          logs,\n          errors,\n        },\n      };\n\n      const artefact = `${this.appDir}/releases/v${releaseId}.tar.gz`;\n      if (!(await this.sh.exists(artefact))) {\n        throw new Exception(\"MissingReleaseArtefact\", `Cannot find artefact for release v${releaseId}`);\n      }\n\n      const supervisorFile = `/etc/supervisor/conf.d/${this.app.name}-${id}.conf`;\n      const supervisorConfig =\n        [\n          `[program:${this.app.name}-${id}]`,\n          `directory=${directory}/package`,\n          `command=bash -c \"set -a; source ${this.appDir}/.env; set +a; n auto; npm start\"`,\n          `stderr_logfile=${logs}`,\n          `stdout_logfile=${errors}`,\n          `user=appuser`,\n          `stopasgroup=true`,\n        ].join(\"\\n\") + \"\\n\";\n\n      const nginxFile = `/etc/nginx/sites-enabled/${instance.id}.${this.app.domain.primary}.conf`;\n      const nginxConfig =\n        [\n          `upstream ${this.app.name}-${instance.id} {`,\n          `  server 127.0.0.1:${port};`,\n          `  keepalive 64;`,\n          `}`,\n          `server {`,\n          `  listen 80;`,\n          `  server_name preview-${instance.id}.${this.app.domain.primary};`,\n          `  return 301 https://$host$request_uri;`,\n          `}`,\n          `server {`,\n          `  listen 443 ssl;`,\n          `  server_name preview-${instance.id}.${this.app.domain.primary};`,\n          `  ssl_certificate /etc/letsencrypt/live/${this.app.domain.primary}/fullchain.pem;`,\n          `  ssl_certificate_key /etc/letsencrypt/live/${this.app.domain.primary}/privkey.pem;`,\n          `  include /etc/deploy/nginx/options-ssl.conf;`,\n          `  location / {`,\n          `    proxy_redirect     off;`,\n          `    proxy_set_header   X-Real-IP          $remote_addr;`,\n          `    proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;`,\n          `    proxy_set_header   X-Forwarded-Proto  $scheme;`,\n          `    proxy_set_header   Host               $http_host;`,\n          `    proxy_set_header   X-NginX-Proxy      true;`,\n          `    proxy_set_header   Connection         \"\";`,\n          `    proxy_http_version 1.1;`,\n          `    proxy_pass         http://${this.app.name}-${instance.id};`,\n          `  }`,\n          `}`,\n        ].join(\"\\n\") + \"\\n\";\n\n      this.app.deployments.current.push(instance);\n      this.app.deployments.history.unshift({\n        active: this.app.deployments.active,\n        deployments: this.app.deployments.current.map((instance) => instance.id),\n        createdAt: getCreatedAt(),\n      });\n      this.app.deployments.history = this.app.deployments.history.slice(0, this.app.config.maxDeploymentHistory);\n\n      await this.sh.exec(\n        [\n          `type n || npm install --global n`,\n          `mkdir -p ${quote(Path.dirname(logs))}`,\n          `mkdir -p ${quote(directory)}`,\n          `tar -zxf ${quote(artefact)} -C ${quote(directory)}`,\n          `cat <<- 'EOF' > ${quote(supervisorFile)}\\n${supervisorConfig}\\nEOF\\n`,\n          `cat <<- 'EOF' > ${quote(nginxFile)}\\n${nginxConfig}\\nEOF\\n`,\n          `supervisorctl reread`,\n          `supervisorctl update`,\n          `nginx -t`,\n        ].join(\"\\n\"),\n      );\n\n      await this.createCertificates();\n      await this.sh.exec(\"service nginx reload\");\n\n      this.log(`Create new app instance ${quote(instance.id)} from release v${releaseId}.`);\n\n      return instance;\n    });\n  }\n\n  async start(instanceId: AppInstanceId): Promise<void> {\n    await this.withManifestSync(async () => {\n      this.log(`Start app instance ${this.app.name}-${instanceId}`);\n      await this.sh.exec(`supervisorctl start ${this.app.name}-${instanceId}`);\n    });\n  }\n\n  async restart(instanceId: AppInstanceId): Promise<void> {\n    await this.withManifestSync(async () => {\n      this.log(`Restart app instance ${this.app.name}-${instanceId}`);\n      await this.sh.exec(`supervisorctl restart ${this.app.name}-${instanceId}`);\n    });\n  }\n\n  async status(instanceId: AppInstanceId): Promise<{ status: string; text: string }> {\n    return await this.withManifestSync(async () => {\n      this.log(`Status app instance ${this.app.name}-${instanceId}`);\n      const statusText = await this.sh.execNoFail(`supervisorctl status ${this.app.name}-${instanceId}`);\n      if (statusText != null) {\n        const match = /^[\\S]+\\s+([\\S]+)\\s+(.*)$/i.exec(statusText.trim());\n\n        return match == null ? { status: \"UNKNOWN\", text: statusText } : { status: match[1], text: statusText };\n      }\n      return { status: \"SSH_ERROR\", text: \"Error in SSH command.\" };\n    });\n  }\n\n  async stop(instanceId: AppInstanceId): Promise<void> {\n    await this.withManifestSync(async () => {\n      this.log(`Stop app instance ${this.app.name}-${instanceId}`);\n      await this.sh.exec(`supervisorctl stop ${this.app.name}-${instanceId}`);\n    });\n  }\n\n  async destroyRelease(releaseId: ReleaseId): Promise<void> {\n    await this.withManifestSync(async () => {\n      const release = await this.getRelease(releaseId);\n      if (release == null) {\n        throw new Exception(\"UnknownRelease\", `There is no such release.`);\n      }\n\n      const instances = await this.instances();\n      const matchedInstances = instances.filter((instance) => instance.releaseId === releaseId);\n\n      if (matchedInstances.length > 0) {\n        throw new Exception(\"ReleaseInUse\", `There are ${matchedInstances.length} active instance(s).`);\n      }\n\n      this.app.releases = this.app.releases.filter((release) => release.id !== releaseId);\n\n      await this.sh.exec(`\n        rm -f ${quote(`${this.appDir}/releases/v${release.id}.tar.gz`)};\n      `);\n\n      this.log(`Delete release v${release.id}`);\n    });\n  }\n\n  async destroyInstance(instanceId: AppInstanceId): Promise<void> {\n    const supervisorFile = `/etc/supervisor/conf.d/${this.app.name}-${instanceId}.conf`;\n    const nginxFile = `/etc/nginx/sites-enabled/${instanceId}.${this.app.domain.primary}.conf`;\n    await this.withManifestSync(async () => {\n      const instance = await this.getInstance(instanceId);\n      const instances = await this.instances();\n\n      if (instance == null) throw new Exception(\"UnknownAppInstance\", `No such instance: ${instanceId}`);\n\n      this.app.deployments.current = instances.filter((instance) => instance.id !== instanceId);\n      this.app.deployments.history.push(this.createHistoryItem());\n\n      await this.sh.exec(`\n        rm -f ${quote(supervisorFile)};\n        rm -f ${quote(nginxFile)};\n        rm -rf ${quote(instance.internal.directory)};\n        supervisorctl reread;\n        supervisorctl update;\n        service nginx reload;\n      `);\n\n      this.log(`Destroy app instance ${this.app.name}-${instanceId}`);\n    });\n  }\n\n  private createHistoryItem(): DeploymentHistoryItem {\n    return {\n      active: this.app.deployments.active,\n      deployments: this.app.deployments.current.map((instance) => instance.id),\n      createdAt: getCreatedAt(),\n    };\n  }\n\n  async logs(instanceId: AppInstanceId): Promise<ReadableStream> {\n    throw new Error(\"Unimplemented\");\n  }\n\n  // -- Deployment Management\n  async deploy(instanceId: AppInstanceId): Promise<DeploymentHistoryItem> {\n    const instance = await this.getInstance(instanceId);\n    if (instance == null) throw new Exception(\"UnknownAppInstance\");\n\n    return await this.withManifestSync(async () => {\n      this.app.deployments.active = instanceId;\n      const historyItem = this.createHistoryItem();\n      const config =\n        [\n          `server {`,\n          `  listen 80;`,\n          `  server_name ${this.app.domain.primary} ${this.app.domain.aliases.join(\" \")};`,\n          `  return 301 https://$host$request_uri;`,\n          `}`,\n          `server {`,\n          `  listen 443 ssl;`,\n          `  server_name ${this.app.domain.primary} ${this.app.domain.aliases.join(\" \")};`,\n          `  ssl_certificate /etc/letsencrypt/live/${this.app.domain.primary}/fullchain.pem;`,\n          `  ssl_certificate_key /etc/letsencrypt/live/${this.app.domain.primary}/privkey.pem;`,\n          `  include /etc/deploy/nginx/options-ssl.conf`,\n          `  location / {`,\n          `    proxy_redirect     off;`,\n          `    proxy_set_header   X-Real-IP          $remote_addr;`,\n          `    proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;`,\n          `    proxy_set_header   X-Forwarded-Proto  $scheme;`,\n          `    proxy_set_header   Host               $http_host;`,\n          `    proxy_set_header   X-NginX-Proxy      true;`,\n          `    proxy_set_header   Connection         \"\";`,\n          `    proxy_http_version 1.1;`,\n          `    proxy_pass         http://${this.app.name}-${instance.id};`,\n          `  }`,\n          `}`,\n        ].join(\"\\n\") + \"\\n\";\n\n      await this.sh.exec(\n        [\n          `cat <<- 'EOF' > /etc/nginx/sites-enabled/${this.app.name}.conf\\n${config}\\nEOF\\n`,\n          `service nginx reload`, //\n        ].join(\"\\n\") + \"\\n\",\n      );\n\n      return historyItem;\n    });\n  }\n\n  async rollback(): Promise<DeploymentHistoryItem> {\n    if (this.app.deployments.history.length === 0) throw new Exception(\"NoHistoryFound\");\n    const lastVersion = this.app.deployments.history[0].active;\n    if (lastVersion == null) throw new Exception(\"NoDeploymentFound\");\n    const instance = await this.getInstance(lastVersion);\n    if (instance == null) throw new Exception(\"NoDeploymentFound\");\n    this.log(`Rollback from ${quote(this.app.deployments.active ?? \"none\")} to ${quote(instance.id)}`);\n\n    return await this.deploy(lastVersion);\n  }\n}\n","import chalk from \"chalk\";\nimport * as OS from \"os\";\nimport * as FileSystem from \"fs\";\nimport * as Path from \"path\";\nimport * as CP from \"child_process\";\nimport * as Util from \"util\";\nimport { Exception, FileNotFoundException, quote } from \"./helpers\";\nimport { HostConfig } from \"./HostConfig\";\n\nexport class SSHClient {\n  private readonly server: Required<HostConfig>;\n  private readonly binSSH = process.env.SSH_BIN_PATH ?? \"/usr/bin/ssh\";\n  private readonly binSCP = process.env.SCP_BIN_PATH ?? \"/usr/bin/scp\";\n  constructor(server: HostConfig) {\n    this.server = {\n      port: 22,\n      user: \"root\",\n      privateKey: \"~/.ssh/id_rsa\",\n      appsDirectory: \"/apps\",\n      ...server,\n    };\n\n    if (process.env.DEPLOYER_SSH_KEY != null) {\n      this.server.privateKey = Path.resolve(OS.tmpdir(), \"deployer\", Date.now() + \".pem\");\n      FileSystem.mkdirSync(Path.dirname(this.server.privateKey), { recursive: true });\n      FileSystem.writeFileSync(this.server.privateKey, process.env.DEPLOYER_SSH_KEY, { mode: 0o600, encoding: \"utf8\" });\n    }\n  }\n\n  async ls(expr: string): Promise<string[]> {\n    const output = await this.exec(`find ${quote(expr)} -mindepth 1 -maxdepth 1 -type d`);\n    const lines = output.trim().split(/\\r?\\n/);\n\n    return lines.map((line) => line.trim());\n  }\n\n  async mkdir(path: string): Promise<void> {\n    await this.exec(`mkdir -p ${quote(path)}`);\n  }\n\n  async exists(file: string): Promise<boolean> {\n    const result = (\n      await this.exec(`\n      test -f ${quote(file)} && echo 'file'  || echo ''\n      test -d ${quote(file)} && echo 'dir'   || echo ''\n      `)\n    ).trim();\n\n    return result === \"file\" || result === \"dir\";\n  }\n\n  async read(file: string): Promise<string> {\n    if (await this.exists(file)) {\n      const output = await this.exec(`cat ${quote(file)}`);\n\n      return output;\n    }\n\n    throw new FileNotFoundException(file);\n  }\n\n  async write(file: string, contents: string): Promise<void> {\n    console.debug(chalk.gray(`Writing file: ${chalk.bold(file)}`));\n    await this.exec(`cat <<- EOF > ${quote(file)}\\n${contents}\\nEOF\\n`);\n  }\n\n  async readJSON<T extends Record<string, any> = any>(file: string): Promise<T> {\n    return JSON.parse(await this.read(file));\n  }\n\n  async upload(localFile: string, remoteFile: string): Promise<void> {\n    try {\n      console.debug(chalk.gray(chalk.bold(`Upload (${this.server.host}): `), localFile, \" to \", remoteFile));\n      const { stdout, stderr } = await Util.promisify(CP.exec)(\n        `${this.binSCP} -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -q -i ${quote(\n          this.server.privateKey,\n        )} -P ${this.server.port} ${quote(localFile)} ${this.server.user}@${this.server.host}:${quote(remoteFile)}`,\n      );\n      if (stderr !== \"\") console.error(chalk.red(stderr));\n      if (stdout !== \"\") console.log(chalk.gray(stdout));\n    } catch (error) {\n      throw new Exception(\"SCPError\", error.message);\n    }\n  }\n\n  async exec(script: string): Promise<string> {\n    try {\n      console.debug(chalk.gray(chalk.bold(`Execute (${this.server.host}): `), script));\n      const boundary = `END_OF_SCRIPT_${Date.now()}`;\n      const outputBoundary = `-------------SSH-OUTPUT-----`;\n      const { stdout, stderr } = await Util.promisify(CP.exec)(\n        `${this.binSSH} -T -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ${quote(\n          this.server.privateKey,\n        )} -p ${this.server.port} ${this.server.user}@${this.server.host} <<'${boundary}'\\n` +\n          `echo ${quote(outputBoundary)};\\n` +\n          script +\n          \"\\n\" +\n          boundary +\n          \"\\n\",\n      );\n      if (stderr !== \"\") console.error(chalk.red(stderr));\n      const index = stdout.indexOf(outputBoundary);\n      if (index >= 0) return stdout.substr(index + outputBoundary.length + 1);\n      return stdout;\n    } catch (error) {\n      throw new Exception(\"SCPError\", error.message);\n    }\n  }\n\n  async execNoFail(script: string): Promise<string | null> {\n    try {\n      return await this.exec(script);\n    } catch {\n      return null;\n    }\n  }\n}\n","import { AppManager } from \"./AppManager\";\nimport { AppManifest } from \"./AppManifest\";\nimport { CreateAppOptions } from \"./CreateAppOptions\";\nimport { Exception, FileNotFoundException, quote } from \"./helpers\";\nimport { HostConfig } from \"./HostConfig\";\nimport { SSHClient } from \"./SSHClient\";\n\nexport class DeploymentManager {\n  constructor(private readonly server: HostConfig) {}\n\n  private readonly appsDir = this.server.appsDirectory ?? \"/apps\";\n  private readonly sh = new SSHClient(this.server);\n\n  async info(): Promise<Record<string, string | null>> {\n    const node = await this.sh.execNoFail(`node --version`);\n    const npm = await this.sh.execNoFail(`npm --version`);\n    const tar = await this.sh.execNoFail(`tar --version`);\n    const nginx = await this.sh.execNoFail(`nginx -v 2>&1`);\n    const curl = await this.sh.execNoFail(`curl --version`);\n    const user = await this.sh.execNoFail(`id -u appuser`);\n    const supervisor = await this.sh.execNoFail(`supervisord --version`);\n    const certbot = await this.sh.execNoFail(`certbot --version`);\n\n    return { node, npm, tar, nginx, curl, user, certbot, supervisor };\n  }\n\n  async apps(): Promise<string[]> {\n    if (await this.sh.exists(this.appsDir)) {\n      const files = await this.sh.ls(this.appsDir);\n      const prefixLength = this.appsDir.length + 1;\n\n      return files.map((file) => file.substr(prefixLength));\n    }\n    return [];\n  }\n\n  async connect(app: string): Promise<AppManager> {\n    try {\n      const manifestFile = `${this.appsDir}/${app}/deploy.json`;\n      const manifest = await this.sh.readJSON<AppManifest>(manifestFile);\n\n      return new AppManager(manifest, manifestFile, this.sh);\n    } catch (error) {\n      if (error instanceof FileNotFoundException) {\n        throw new Exception(\"AppNotFound\", `No such app: ${quote(app)}`);\n      }\n\n      throw error;\n    }\n  }\n\n  async create(options: CreateAppOptions): Promise<AppManager> {\n    if (await this.sh.exists(`${this.appsDir}/${options.name}/deploy.json`)) {\n      throw new Exception(\"DuplicateApp\", `Another app with name (${quote(options.name)}) already exists.`);\n    }\n\n    const manifest: AppManifest = {\n      name: options.name,\n      repository: options.repository ?? \"\",\n      domain: {\n        email: options.email ?? `certbot-notif@${options.domain}`,\n        primary: options.domain,\n        aliases: options.domainAliases ?? [],\n      },\n      healthcheck: options.healthcheck ?? \"curl -sSf http://localhost:${PORT}/health\",\n      releases: [],\n      deployments: {\n        current: [],\n        history: [],\n      },\n      changelog: [],\n      config: {\n        maxReleases: options.maxReleases ?? 10,\n        maxDeploymentHistory: options.maxDeploymentHistory ?? 100,\n      },\n      env: [],\n    };\n\n    await this.check();\n    await this.sh.mkdir(`/apps/${manifest.name}`);\n    await this.sh.mkdir(`/apps/${manifest.name}/releases`);\n    await this.sh.mkdir(`/apps/${manifest.name}/deployments`);\n    await this.sh.write(`/apps/${manifest.name}/.env`, ``);\n    await this.sh.write(`/apps/${manifest.name}/deploy.json`, JSON.stringify(manifest, null, 2));\n\n    const connection = await this.connect(manifest.name);\n\n    await connection.createCertificates();\n\n    return connection;\n  }\n\n  async check(): Promise<void> {\n    const tools = Object.entries(await this.info())\n      .filter(([_, version]) => version == null)\n      .map(([tool]) => tool);\n\n    if (tools.length > 0) {\n      throw new Exception(\"UnsupportedServer\", `Missing required programs: ${tools.join(\", \")}`);\n    }\n  }\n}\n"],"names":["FS","Path","chalk","Util","CP","OS","FileSystem"],"mappings":"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"}