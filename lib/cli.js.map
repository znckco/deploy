{"version":3,"file":"cli.js","sources":["../src/cli.ts"],"sourcesContent":["import chalk from \"chalk\";\nimport * as FS from \"fs\";\nimport * as Path from \"path\";\nimport { version } from \"../package.json\";\nimport { AppInstanceId, DeploymentManager, HostConfig, ReleaseId } from \"./core\";\nimport { Exception, importJSON, quote } from \"./core/helpers\";\n\nexport async function cli(args: string[]): Promise<void> {\n  const yargs = await import(\"yargs\");\n  const prompts = await import(\"prompts\");\n  const Table = await import(\"cli-table\");\n  const configFile = Path.resolve(process.cwd(), \"deploy.json\");\n  if (!FS.existsSync(configFile)) {\n    throw new Exception(\"MissingConfigFile\", \"Cannot find deploy.json in current directory.\");\n  }\n\n  const config = await importJSON<HostConfig>(configFile);\n  const deployer = new DeploymentManager(config);\n\n  yargs\n    .default(args)\n    .scriptName(\"deploy\")\n    .version(version)\n\n    .command(\"check\", \"check server compatibility\", {\n      builder: {},\n      handler: async () => {\n        await deployer.check();\n        console.log(chalk.green(\"OK.\"));\n      },\n    })\n\n    .command(\"apps\", \"show available apps\", {\n      builder: {},\n      handler: async () => {\n        const apps = await deployer.apps();\n\n        const table = new Table.default({ head: [\"App Name\"] });\n        for (const app of apps) {\n          table.push([app]);\n        }\n\n        if (apps.length === 0) console.warn(chalk.yellow(\"No apps found.\"));\n        else console.log(table.toString());\n      },\n    })\n    .command<{ app: string }>(\"releases\", \"show releases of an app\", {\n      builder: {\n        app: {\n          alias: [\"a\"],\n          default: process.env.DEPLOYER_APP,\n          demandOption: true,\n          description: \"App name\",\n        },\n      },\n      handler: async ({ app }) => {\n        const appManager = await deployer.connect(app);\n        const releases = appManager.app.releases;\n        const instances = await appManager.instances();\n\n        // TODO: Use some lib to show tables\n        if (releases.length > 0) {\n          const table = new Table.default({\n            head: [\"Id\", \"Created At\", \"Commit\", \"Tag\", \"Instances\"],\n          });\n          for (const release of releases) {\n            table.push([\n              release.id,\n              release.createdAt,\n              release.commit,\n              release.tag,\n              instances\n                .filter((instance) => instance.releaseId === release.id)\n                .map((instance) => instance.id)\n                .join(\", \"),\n            ]);\n          }\n\n          console.log(table.toString());\n        } else {\n          console.warn(chalk.yellow(\"No releases found.\"));\n        }\n      },\n    })\n    .command<{ app: string }>(\"instances\", \"show instances of an app\", {\n      builder: {\n        app: {\n          alias: [\"a\"],\n          default: process.env.DEPLOYER_APP,\n          demandOption: true,\n          description: \"App name\",\n        },\n      },\n      handler: async ({ app }) => {\n        const appManager = await deployer.connect(app);\n        const instances = await appManager.instances();\n\n        if (instances.length > 0) {\n          const table = new Table.default({\n            head: [\"Id\", \"Release\", \"Created At\", \"Preview\"],\n          });\n          for (const instance of instances) {\n            table.push([instance.id.slice(-6), `v${instance.releaseId}`, instance.createdAt, instance.preview]);\n          }\n          console.log(table.toString());\n        } else {\n          console.warn(chalk.yellow(\"No releases found.\"));\n        }\n      },\n    })\n    .command(\"create-app\", \"create a new app\", {\n      builder: {},\n      handler: async () => {\n        const { name, domain, email, domainAliases, repository, healthcheck, maxReleases, maxDeploymentHistory } =\n          await prompts.default([\n            {\n              type: \"text\",\n              name: \"name\",\n              message: \"Short app name\",\n            },\n            {\n              type: \"text\",\n              name: \"domain\",\n              message: \"Primary application domain\",\n            },\n            {\n              type: \"text\",\n              name: \"email\",\n              message: \"Email address for SSL certificate notifications\",\n            },\n            {\n              type: \"list\",\n              name: \"domainAliases\",\n              message: \"Other domains\",\n            },\n            {\n              type: \"text\",\n              name: \"repository\",\n              message: \"GitHub repository\",\n            },\n            {\n              type: \"text\",\n              name: \"healthcheck\",\n              message: \"Healthcheck URL\",\n              initial: 'curl -sSf \"http://localhost:${PORT}/health\"',\n            },\n            {\n              type: \"number\",\n              name: \"maxReleases\",\n              message: \"Max number of releases to keep\",\n              increment: 1,\n              initial: 5,\n            },\n            {\n              type: \"number\",\n              name: \"maxDeploymentHistory\",\n              message: \"Max deployment history to keep\",\n              increment: 1,\n              initial: 100,\n            },\n          ]);\n\n        const app = await deployer.create({\n          name,\n          domain,\n          email,\n          domainAliases: domainAliases.filter(Boolean),\n          repository,\n          healthcheck,\n          maxReleases,\n          maxDeploymentHistory,\n        });\n\n        console.log(\n          chalk.gray(\n            `Application ${chalk.white(quote(app.app.name))} created. Set ${chalk.green(\n              `DEPLOYER_APP=${app.app.name}`,\n            )} to use as default app.`,\n          ),\n        );\n      },\n    })\n    .command<{ app: string; commit: string; tag: string; artefact: string }>(\n      \"create-release [artefact]\",\n      \"create a new release\",\n      {\n        builder: (yargs) =>\n          yargs\n            .positional(\"artefact\", { default: \".\", description: \"Directory or a tar file\" })\n            .option(\"app\", {\n              alias: [\"a\"],\n              default: process.env.DEPLOYER_APP,\n              demandOption: true,\n              description: \"App name\",\n            })\n            .option(\"commit\", { demandOption: true, description: \"Commit SHA\", alias: [\"c\"] })\n            .option(\"tag\", { description: \"Release tag or version\", alias: [\"t\"] }) as any,\n        handler: async ({ app, commit, tag = \"main\", artefact }) => {\n          if (!Path.isAbsolute(artefact)) {\n            artefact = Path.resolve(process.cwd(), artefact);\n          }\n          const manager = await deployer.connect(app);\n          const release = await manager.createRelease({ commit, tag }, artefact);\n\n          console.log(`Created release v${release.id} `);\n        },\n      },\n    )\n    .command<{ app: string; id: ReleaseId }>(\"create-instance <id>\", \"create an instance of a release\", {\n      builder: (yargs) =>\n        yargs\n          .positional(\"id\", {\n            demandOption: true,\n            description: \"Release ID\",\n            number: true,\n          })\n          .option(\"app\", {\n            alias: [\"a\"],\n            default: process.env.DEPLOYER_APP,\n            demandOption: true,\n            description: \"App name\",\n          }) as any,\n      handler: async ({ app, id }) => {\n        const manager = await deployer.connect(app);\n        const instance = await manager.createInstance(id);\n\n        console.log(`Created instance (id: ${instance.id.slice(-6)}) from v${instance.releaseId} of ${app}.`);\n        console.log(`Instance URL: ${chalk.green(instance.preview)}`);\n      },\n    })\n    .command<{ app: string; id: AppInstanceId }>(\n      \"promote-instance <id>\",\n      \"promote an instance of a release to production\",\n      {\n        builder: (yargs) =>\n          yargs\n            .positional(\"id\", {\n              demandOption: true,\n              description: \"App instance ID\",\n            })\n            .option(\"app\", {\n              alias: [\"a\"],\n              default: process.env.DEPLOYER_APP,\n              demandOption: true,\n              description: \"App name\",\n            }) as any,\n        handler: async ({ app, id }) => {\n          const manager = await deployer.connect(app);\n          const instances = await manager.instances();\n          const matchingInstances = instances.filter((instance) => instance.id.endsWith(id));\n\n          if (matchingInstances.length > 1) throw new Exception(\"InstanceShortIDCollision\", \"Provide full instance id\");\n          if (matchingInstances.length === 0) {\n            await manager.deploy(id);\n          } else {\n            await manager.deploy(matchingInstances[0].id);\n          }\n\n          console.log(chalk.gray(`Done.`));\n        },\n      },\n    )\n    .command<{ app: string }>(\"env\", \"set environment variables\", {\n      builder: (yargs) =>\n        yargs.option(\"app\", {\n          alias: [\"a\"],\n          default: process.env.DEPLOYER_APP,\n          demandOption: true,\n          description: \"App name\",\n        }) as any,\n      handler: async ({ _: args, app }) => {\n        const manager = await deployer.connect(app);\n        if (args[0] === \"env\") args.shift();\n        if (args.length === 0) {\n          console.log(`Current environment variables:\\n - ${manager.app.env.join(\"\\n - \")}`);\n        } else {\n          const envs = Object.fromEntries(\n            args\n              .filter((arg): arg is string => typeof arg === \"string\")\n              .map((arg) => {\n                const index = arg.indexOf(\"=\");\n                if (index >= 0) {\n                  return [arg.substr(0, index), arg.substr(index + 1)] as const;\n                } else {\n                  return [arg, \"true\"] as const;\n                }\n              }),\n          );\n\n          await manager.setEnv(envs);\n        }\n      },\n    })\n    .command<{ app: string; id: AppInstanceId }>(\"delete-instance <id>\", \"delete an instance of a release\", {\n      builder: (yargs) =>\n        yargs\n          .positional(\"id\", {\n            demandOption: true,\n            description: \"App instance ID\",\n          })\n          .option(\"app\", {\n            alias: [\"a\"],\n            default: process.env.DEPLOYER_APP,\n            demandOption: true,\n            description: \"App name\",\n          }) as any,\n      handler: async ({ app, id }) => {\n        const manager = await deployer.connect(app);\n        const instances = await manager.instances();\n        const matchingInstances = instances.filter((instance) => instance.id.endsWith(id));\n\n        if (matchingInstances.length > 1) throw new Exception(\"InstanceShortIDCollision\", \"Provide full instance id\");\n        if (matchingInstances.length === 0) {\n          await manager.destroyInstance(id);\n        } else {\n          await manager.destroyInstance(matchingInstances[0].id);\n        }\n\n        console.log(chalk.gray(`Done.`));\n      },\n    })\n    .command<{ app: string; id: ReleaseId }>(\"delete-release <id>\", \"delete a release\", {\n      builder: (yargs) =>\n        yargs\n          .positional(\"id\", {\n            demandOption: true,\n            description: \"Release ID\",\n            number: true,\n          })\n          .option(\"app\", {\n            alias: [\"a\"],\n            default: process.env.DEPLOYER_APP,\n            demandOption: true,\n            description: \"App name\",\n          }) as any,\n      handler: async ({ app, id }) => {\n        const manager = await deployer.connect(app);\n\n        await manager.destroyRelease(id);\n\n        console.log(chalk.gray(\"Done.\"));\n      },\n    })\n\n    .command<{ app: string; instance: string }>(\"status\", \"app/instance status\", {\n      builder: {\n        app: {\n          alias: [\"a\"],\n          default: process.env.DEPLOYER_APP,\n          demandOption: true,\n          description: \"App name\",\n        },\n        instance: {\n          alias: [\"i\"],\n          description: \"App instance ID\",\n        },\n      },\n      handler: async ({ app, instance: id }) => {\n        const manager = await deployer.connect(app);\n\n        const instances = await manager.instances();\n        const matchingInstances = id != null ? instances.filter((instance) => instance.id.endsWith(id)) : instances;\n        const statuses = await Promise.all(matchingInstances.map((instance) => manager.status(instance.id)));\n\n        const table = new Table.default({\n          head: [\"ID\", \"Release\", \"Status\", \"Preview\"],\n        });\n\n        table.push(\n          ...matchingInstances.map((instance, index) => [\n            instance.id.slice(-6),\n            `v${instance.releaseId}`,\n            statuses[index].status,\n            instance.preview,\n          ]),\n        );\n\n        console.log(table.toString());\n      },\n    })\n\n    .completion(\"completion\", false)\n    .demandCommand(1).argv;\n}\n"],"names":["Path","FS","Exception","importJSON","DeploymentManager","version","chalk","quote"],"mappings":"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"}